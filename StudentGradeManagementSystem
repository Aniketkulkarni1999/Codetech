import java.util.HashMap;
import java.util.Map;
import java.util.Scanner;
public class StudentGradeManagementSystem {
 
        static Map<Integer, Student> studentMap = new HashMap<>();
        static int rollNumberCounter = 1;
    
        static class Student {
            String name;
            Map<String, Integer> marks = new HashMap<>();
    
            Student(String name) {
                this.name = name;
            }
    
            void addSubjectMark(String subject, int mark) {
                marks.put(subject, mark);
            }
    
            double calculatePercentage() {
                int totalMarks = 0;
                for (int mark : marks.values()) {
                    totalMarks += mark;
                }
                return (double) totalMarks / marks.size();
            }
    
            char calculateGrade() {
                double percentage = calculatePercentage();
                if (percentage >= 90) {
                    return 'A';
                } else if (percentage >= 80) {
                    return 'B';
                } else if (percentage >= 70) {
                    return 'C';
                } else if (percentage >= 60) {
                    return 'D';
                } else {
                    return 'F';
                }
            }
        }
    
        public static void main(String[] args) {
            Scanner scanner = new Scanner(System.in);
    
            while (true) {
                System.out.println("Student Grade Management System");
                System.out.println("1. Add Student");
                System.out.println("2. Update Student");
                System.out.println("3. Delete Student");
                System.out.println("4. View Student Records");
                System.out.println("5. Exit");
                System.out.print("Enter your choice: ");
    
                // Check if the next token is an integer
                if (scanner.hasNextInt()) {
                    int choice = scanner.nextInt();
                    scanner.nextLine(); // Consume newline
                    
                    switch (choice) {
                        case 1:
                            addStudent(scanner);
                            break;
                        case 2:
                            updateStudent(scanner);
                            break;
                        case 3:
                            deleteStudent(scanner);
                            break;
                        case 4:
                            viewStudentRecords();
                            break;
                        case 5:
                            System.out.println("Exiting...");
                            System.exit(0);
                            break;
                        default:
                            System.out.println("Invalid choice. Please try again.");
                    }
                } else {
                    System.out.println("Invalid input. Please enter a number.");
                    scanner.nextLine(); // Consume invalid input
                }
            }
        }
    
        static void addStudent(Scanner scanner) {
            System.out.print("Enter student name: ");
            String name = scanner.nextLine();
            Student student = new Student(name);
    
            System.out.print("Enter number of subjects: ");
            
            // Check if the next token is an integer
            if (scanner.hasNextInt()) {
                int numSubjects = scanner.nextInt();
                scanner.nextLine(); // Consume newline
    
                for (int i = 0; i < numSubjects; i++) {
                    System.out.print("Enter subject name: ");
                    String subject = scanner.nextLine();
                    System.out.print("Enter marks for " + subject + ": ");
                    // Check if the next token is an integer
                    if (scanner.hasNextInt()) {
                        int mark = scanner.nextInt();
                        scanner.nextLine(); // Consume newline
                        student.addSubjectMark(subject, mark);
                    } else {
                        System.out.println("Invalid input for marks. Please enter a number.");
                        scanner.nextLine(); // Consume invalid input
                        return; // Exit method to prevent adding incomplete data
                    }
                }
    
                studentMap.put(rollNumberCounter++, student);
                System.out.println("Student added successfully.");
            } else {
                System.out.println("Invalid input for number of subjects. Please enter a number.");
                scanner.nextLine(); // Consume invalid input
            }
        }
    
        static void updateStudent(Scanner scanner) {
            System.out.print("Enter student roll number to update: ");
            if (scanner.hasNextInt()) {
                int rollNumber = scanner.nextInt();
                scanner.nextLine(); // Consume newline
    
                if (studentMap.containsKey(rollNumber)) {
                    Student student = studentMap.get(rollNumber);
                    System.out.print("Enter new name for student: ");
                    String newName = scanner.nextLine();
                    student.name = newName;
                    System.out.println("Student details updated successfully.");
                } else {
                    System.out.println("Student not found.");
                }
            } else {
                System.out.println("Invalid input. Please enter a number.");
                scanner.nextLine(); // Consume invalid input
            }
        }
    
        static void deleteStudent(Scanner scanner) {
            System.out.print("Enter student roll number to delete: ");
            if (scanner.hasNextInt()) {
                int rollNumber = scanner.nextInt();
                scanner.nextLine(); // Consume newline
    
                if (studentMap.containsKey(rollNumber)) {
                    studentMap.remove(rollNumber);
                    System.out.println("Student deleted successfully.");
                } else {
                    System.out.println("Student not found.");
                }
            } else {
                System.out.println("Invalid input. Please enter a number.");
                scanner.nextLine(); // Consume invalid input
            }
        }
    
        static void viewStudentRecords() {
            if (studentMap.isEmpty()) {
                System.out.println("No student records found.");
            } else {
                for (Map.Entry<Integer, Student> entry : studentMap.entrySet()) {
                    int rollNumber = entry.getKey();
                    Student student = entry.getValue();
                    System.out.println("Roll Number: " + rollNumber);
                    System.out.println("Name: " + student.name);
                    System.out.println("Subjects and Marks:");
                    for (Map.Entry<String, Integer> subjectEntry : student.marks.entrySet()) {
                        System.out.println(subjectEntry.getKey() + ": " + subjectEntry.getValue());
                    }
                    System.out.println("Percentage: " + student.calculatePercentage());
                    System.out.println("Grade: " + student.calculateGrade());
                    System.out.println();
                }
            }
        }
    }
    
